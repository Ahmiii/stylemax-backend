


###

#using jetbrains http client: post request for user signup
POST http://localhost:3000/user/login HTTP/1.1
Content-Type: application/json

{
"email": "a@m.com",
"password": "123456",
"firstName": "a",
"lastName": "m"
}

> {%
client.test("Request executed successfully", function () {
client.assert(response.status === 200, "Response status is not 200");
});
%}

### login vendor save access token
POST http://localhost:3000/vendor/login


Content-Type: application/json

{
"email": "a@mail.com",
"password": "123456"
}

> {%
client.global.set(
"access_token",
response.body.access_token
)
client.test("Request executed successfully", function () {
client.assert(response.status === 200, "Response status is not 200");
});
%}

### create product using vendor token
###          label,
#            description,
#            pictures,
#            stock,
#            tags,

POST http://localhost:3000/product
#set access token cookie in header
Set-Cookie: access_token={{access_token}}; Path=/
Content-Type: application/json

{
"label": "test",
"description": "test",
"pictures": [
"test"
],
"stock": 1,
"tags": [
"test"
]
}

> {%
//store product id in global variable
client.global.set("product_id", response.body.id);

client.test("Request executed successfully", function () {
client.assert(response.status === 200, "Response status is not 200");
});
%}

### get product by id
GET http://localhost:3000/product/{{product_id}}

> {%
client.test("Request executed successfully", function () {
client.assert(response.status === 200, "Response status is not 200");
});
%}

###upload picture

PUT http://localhost:3000/product/{{product_id}}
Content-Type: multipart/form-data; boundary=WebAppBoundary

--WebAppBoundary
Content-Disposition: form-data; name="pictures"; filename="g.jpg"

< ../toupload/g.jpg
--WebAppBoundary--

> {%
client.test("Request executed successfully", function () {
client.assert(response.status === 200, "Response status is not 200");
});
%}

### create blog post
POST http://localhost:3000/blog
content-type: application/json

{
"title": "test",
"content": "test",
"subtitle": "test",
"date": "2019-01-01",
"tags": [
"test"
]
}

> {%
client.global.set("blog_id", response.body.id);
client.test("Request executed successfully", function () {
client.assert(response.status === 200, "Response status is not 200");
});
%}

### add content to blog post
POST http://localhost:3000/blog/{{blog_id}}/content
content-type: application/json

{
"blogId": "{{blog_id}}",
"data": {
"type": "image",
"data": {
"text": "test"
}
}


}


> {%
client.test("Request executed successfully", function () {
client.assert(response.status === 200, "Response status is not 200");
});
%}

### add content to blog post
POST http://localhost:3000/blog/{{blog_id}}/content
content-type: application/json

{
"blogId": "{{blog_id}}",
"data":
{
"type": "paragraph",
"data": {
"text": "test"
}
}


}


> {%
client.test("Request executed successfully", function () {
client.assert(response.status === 200, "Response status is not 200");
});
%}


